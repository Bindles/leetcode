#* 78. Subsets
nums = [1,2,3]
# @param {Integer[]} nums
# @return {Integer[][]}
from itertools import combinations
#*
class Solution:
    def subsets(self, nums):
        return [comb for i in range(len(nums) + 1) for comb in combinations(nums, i)]
    
print(Solution().subsets(nums))


#return [comb for i in range(len(nums) + 1) | for comb in combinations(nums, i)]

# For each index 'i' in the range from 0 to the length of 'nums' plus 1:
#     For each combination 'comb' generated by combining elements from 'nums' with size 'i':
#         Append 'comb' to the resulting list
